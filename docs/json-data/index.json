[
  [
    "3-4-cyclefree",
    [
      15
    ],
    26,
    "The score 26 is optimal. This was a sample-run, mostly to test displaying the results on the website.",
    1740256478,
    "3-4-cyclefree_1740256478.json"
  ],
  [
    "gasoline-list",
    [
      3
    ],
    1.6521739130434783,
    "Perturb Lucas' optimal function\n\nChanges from:\n  u_i = 2**n * (1 - 2 ** (-i))\nto:\n  u_i = 2*n / i\nAnd, to not give too much away, the final 2**n sequence to 2*n.",
    1740234412,
    "gasoline-list_1740234412.json"
  ],
  [
    "gasoline-list",
    [
      3
    ],
    1.75,
    "Perturb Lucas' solution slightly\n\nStart with putting the final sequence of the xs as:\n  [2**n] * 2**n\ninstead of\n  [2**n] * 2**n + 0",
    1740323614,
    "gasoline-list_1740323614.json"
  ],
  [
    "gasoline-list",
    [
      3
    ],
    1.7500002188608434,
    "Perturb Lucas' solution by removing most final entries.",
    1740413681,
    "gasoline-list_1740413681.json"
  ],
  [
    "gasoline-list",
    [
      3
    ],
    1.7777777777777777,
    "Perturb Lucas' solution by removing the ys, and clamp both lists to [0, 2**31 - 1].",
    1740263394,
    "gasoline-list_1740263394.json"
  ],
  [
    "gasoline-list",
    [
      3
    ],
    1.875,
    "Start from Lucas' solution.\n\nThe only found improvement `gasoline(k)` seems to have the same approximation-ratio, and operate very similarly to, Lucas' solution with parameter (k+1).\n\n\nFound solution (each entry multiplied by 2, to compare more easily to ",
    1740309473,
    "gasoline-list_1740309473.json"
  ],
  [
    "gasoline-list",
    [
      3
    ],
    1110010.0099940917,
    "Perturb Lucas' solution by simply removing the ys",
    1740242660,
    "gasoline-list_1740242660.json"
  ]
]