[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["funsearch", "funsearch.container"]

[tool.pdm]
[project]
name = "funsearch"
dynamic = [
  "version",
]
description = "FunSearch algorithm: Mathematical discoveries from program search with large language models"
readme = "README.md"
requires-python = ">=3.9"

classifiers = [
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "absl-py==2.0.0",
    "click==8.1",
    "cloudpickle==3.0.0",
    "python-dotenv==1.0.0",
    "gurobipy>=11.0.3",
    "autopep8>=2.3.1",
    "llm==0.22",
    "numpy>=2.0.2",
]

[project.scripts]
funsearch = "funsearch.__main__:main"

[dependency-groups]
lint = [
  "ruff"
]
dev = [
    "pytest>=8.3.4",
]


[tool.ruff]
indent-width = 2
line-length = 110

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "S311",   # suspicious-non-cryptographic-random-usage
    "D203",   # incorrect-blank-line-before-class
    "D213",   # multi-line-summary-second-line
    "COM812", # missing-trailing-comma, see https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    "TRY201", # verbose-raise
    "D401", 
]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = [
    "S101", # Allow asserts in tests
    "D", # Disable all doc in tests
    "ANN201", # Disable return-type-annotation
    "PLR2004", # Allow magic values
    "SLF001", # Allow accessing private members
    "ANN001", # Allow missing type-annotations in function-arguments
]
"specs/**/*.py" = [
    "EM101",  # Allow raw-string-in-exception, hopefully focusing the LLM on more important things
    "RET504", # Allow unnecessary-assign, the variable-names might mean something to the LLM
]
[tool.pytest.ini_options]
addopts = "--doctest-modules"
